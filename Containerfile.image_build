FROM registry.access.redhat.com/ubi10/ubi-minimal@sha256:d8cba62fbd44610595a6ce7badd287ca4c9985cbe9df55cc9b6a5c311b9a46e6 as builder

ARG BUILDER_RPMS="make golang glib2-devel gpgme-devel libassuan-devel libseccomp-devel git bzip2 containers-common"
RUN microdnf -y install $BUILDER_RPMS

ENV GOPROXY='https://proxy.golang.org,direct'
ENV GOSUMDB='sum.golang.org'

WORKDIR /go/src/containers/buildah
COPY buildah/ .
RUN make buildah

# buildah/Containerfile
# 
# Source from the included submodule at
# image_build/blob/main/buildah/Containerfile.
# We will install buildah as an RPM to ensure that we have
# all dependencies but we will overwrite the binary with the
# one that we built previously.
#
# Build a Buildah container image from the latest version
# from https://github.com/containers/buildah.
#
# This image can be used to create a secured container
# that runs safely with privileges within the container.
#

FROM registry.access.redhat.com/ubi10/ubi-minimal@sha256:d8cba62fbd44610595a6ce7badd287ca4c9985cbe9df55cc9b6a5c311b9a46e6

LABEL "io.containers.capabilities"="CHOWN,DAC_OVERRIDE,FOWNER,FSETID,KILL,NET_BIND_SERVICE,SETFCAP,SETGID,SETPCAP,SETUID,CHOWN,DAC_OVERRIDE,FOWNER,FSETID,KILL,NET_BIND_SERVICE,SETFCAP,SETGID,SETPCAP,SETUID,SYS_CHROOT"
LABEL \
      org.label-schema.schema-version="1.0" \
      org.label-schema.vendor="Konflux CI" \
      org.opencontainers.image.vendor="Konflux CI" \
      org.opencontainers.image.url="https://quay.io/konflux-ci/buildah" \
      org.opencontainers.image.source="https://github.com/konflux-ci/buildah-container" \
      org.label-schema.name="buildah" \
      org.opencontainers.image.title="buildah" \
      name="konflux-buildah" \
      com.redhat.component="konflux-buildah" \
      io.k8s.display-name="konflux-buildah" \
      io.openshift.tags="buildah oci" \
      summary="Containerized version of buildah which can be used to build OCI artifacts within Konflux CI." \
      description="OCI images and artifacts are central to the architecture of Konflux. In order to ensure that we can always take advantage of the latest functionality, this image can be used to reliably build the latest version of the CLI." \
      io.k8s.display-name="buildah" \
      io.k8s.description="OCI images and artifacts are central to the architecture of Konflux. In order to ensure that we can always take advantage of the latest functionality, this image can be used to reliably build the latest version of the CLI." \
      io.openshift.tags="oci" \
      vendor="Red Hat, Inc." \
      distribution-scope="public" \
      release="0" \
      url="github.com/konflux-ci/buildah-container"

ARG INSTALL_RPMS="buildah fuse-overlayfs cpp"

# Don't include container-selinux and remove
# directories used by dnf that are just taking
# up space.
RUN printf "[main]\nexcludepkgs=container-selinux" > /etc/dnf/dnf.conf && \
    microdnf -y makecache && \
    microdnf -y update && \
    microdnf -y install shadow-utils && \
    microdnf -y install $INSTALL_RPMS && \
    microdnf -y clean all && \
    rm -rf /var/cache /var/log/dnf* /var/log/yum.*

COPY --from=builder /go/src/containers/buildah/bin/buildah /usr/bin/buildah

ADD image_build/buildah/containers.conf /etc/containers/

# The source image_build containerfile passes secrets from the host to the internal container.
# We will not do that in Konflux as it results in inconsistent container builds due to
# the fact that the hosts are not entitled for any subscriptions.
# Setup internal Buildah to pass secrets/subscriptions down from host to internal container
# RUN printf '/run/secrets/etc-pki-entitlement:/run/secrets/etc-pki-entitlement\n/run/secrets/rhsm:/run/secrets/rhsm\n' > /etc/containers/mounts.conf

# Copy & modify the defaults to provide reference if runtime changes needed.

# Commenting out mount_program = "/usr/bin/fuse-overlayfs" forces Buildah to use the kernel's native
# overlayfs (overlay2) driver instead of fuse-overlayfs.

# Update mountopt to be "nodev,metacopy=on". "metacopy=on" enables metadata-only copy-up, which is
# a feature of newer kernels that improves performance of overlayfs by avoiding full file copy when
# only metadata changes.
RUN sed -e 's|^mount_program|#mount_program|g' \
        -e '/additionalimage.*/a "/var/lib/shared",' \
        -e 's|^mountopt[[:space:]]*=.*$|mountopt = "nodev,metacopy=on"|g' \
        /usr/share/containers/storage.conf \
        > /etc/containers/storage.conf && \
    chmod 644 /etc/containers/storage.conf && \
    chmod 644 /etc/containers/containers.conf

RUN mkdir -p /var/lib/shared/overlay-images \
             /var/lib/shared/overlay-layers \
             /var/lib/shared/vfs-images \
             /var/lib/shared/vfs-layers && \
    touch /var/lib/shared/overlay-images/images.lock && \
    touch /var/lib/shared/overlay-layers/layers.lock && \
    touch /var/lib/shared/vfs-images/images.lock && \
    touch /var/lib/shared/vfs-layers/layers.lock

# Define uid/gid ranges for our user https://github.com/containers/buildah/issues/3053
RUN useradd build && \
    echo -e "build:1:999\nbuild:1001:64535" > /etc/subuid && \
    echo -e "build:1:999\nbuild:1001:64535" > /etc/subgid && \
    mkdir -p /home/build/.local/share/containers && \
    mkdir -p /home/build/.config/containers && \
    chown -R build:build /home/build
# See:  https://github.com/containers/buildah/issues/4669
# Copy & modify the config for the `build` user and remove the global
# `runroot` and `graphroot` which current `build` user cannot access,
# in such case storage will choose a runroot in `/var/tmp`.
RUN sed -e 's|^mount_program|#mount_program|g' \
        -e 's|^graphroot|#graphroot|g' \
        -e 's|^runroot|#runroot|g' \
        /etc/containers/storage.conf \
        > /home/build/.config/containers/storage.conf && \
        chown build:build /home/build/.config/containers/storage.conf

VOLUME /var/lib/containers
VOLUME /home/build/.local/share/containers

# Set an environment variable to default to chroot isolation for RUN
# instructions and "buildah run".
ENV BUILDAH_ISOLATION=chroot
